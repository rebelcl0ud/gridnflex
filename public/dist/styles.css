@import url(https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700);
* {
  box-sizing: border-box; }

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:after,
blockquote:before,
q:after,
q:before {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  font-family: 'Roboto', sans-serif; }

h1 {
  font-weight: 100;
  font-size: 50px; }

/** 
  flex-wrap used to move excess onto new line; otherwise will try to contain it all in one row.

  flex-direction: row | row-reverse | column | colummn-reverse
  flex-wrap: wrap | wrap-reverse

  flex-flow [shorthand for flex-direction and flex-wrap]

  -- horizontal --
  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly

  -- vertical --
  align-items: flex-start | flex-end | center | stretch | baseline

  align-content: flex-start | flex-end | center | space-between | space-around | stretch 

  align-self: flex-start | flex-end | center | baseline | auto | stretch

  -- changes order of items --
  order: #

  -- putting this in a box will grow it to max capable width/ height --
  1 w/ numerous boxes will equally distribute, 2+ essentially acts as if it adds a col to span on w.e item it is put
  
  flex-grow: #

  row, horizontal; col, vertical

  -- --
  flex-shrink: #; how much item will shrink relative to other items
  flex-basis: #px; minimum height this will be

  shorthand; flex: grow# shrink# basis #px;
*/
* {
  box-sizing: border-box; }

.container {
  max-width: 1200px;
  margin: 0 auto; }

.wrapper {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  background: pink;
  height: 500px;
  align-items: center;
  /*align-content: stretch;*/ }

.box-1 {
  /*flex-grow: 4;
  flex-basis: 100px;*/
  width: 100px;
  height: 100px;
  background: red;
  border: 1px solid black; }

.box-2 {
  /*flex-grow: 2;*/
  width: 400px;
  height: 200px;
  background: cyan;
  border: 1px solid black; }

.box-3 {
  /*flex-grow: 2;*/
  width: 100px;
  height: 300px;
  background: red;
  border: 1px solid black;
  align-self: center; }

.box-4 {
  /*flex-grow: 2;*/
  width: 100px;
  height: 400px;
  background: red;
  border: 1px solid black;
  align-self: auto; }

.box-5 {
  /*flex-grow: 2;*/
  width: 100px;
  /*height: 500px;*/
  background: yellow;
  border: 1px solid black;
  align-self: baseline; }

.box-6 {
  /*flex-grow: 2;*/
  width: 100px;
  /*height: 600px;*/
  background: red;
  border: 1px solid black;
  align-self: flex-end; }

